---
- name: Create user
  ansible.builtin.user:
    name: '{{ my_user }}'
    password: '!' # This sets the password to 'locked'
    update_password: on_create
    groups:
      - adm
      - cdrom
      - sudo
      - dip
      - plugdev
      - lxd
    append: true
  register: create_user_result

- name: Don't require password on first login
  ansible.builtin.command: 'passwd -d {{ my_user }}'
  args:
    creates: ~{{ my_user }}/.setpwd
  when: create_user_result.changed

- name: Change password on first login
  ansible.builtin.command: 'chage --lastday 0 {{ my_user }}'
  args:
    creates: ~{{ my_user }}/.setpwd
  when: create_user_result.changed

- name: Remember change password on first login
  become: true
  become_user: '{{ my_user }}'
  ansible.builtin.copy:
    content: ''
    dest: ~/.setpwd
    force: false

- name: Create remote_tmp directory
  ansible.builtin.file:
    path: '/home/{{ my_user }}/.ansible/tmp'
    state: directory
    mode: 'u=rwx,go='
    owner: '{{ my_user }}'
    group: '{{ my_user }}'

- name: Create /var/lib/AccountsService
  ansible.builtin.file:
    path: /var/lib/AccountsService
    state: directory
    owner: root
    group: root
    mode: 'ug=rwx,o=rx'

- name: Create /var/lib/AccountsService/users
  ansible.builtin.file:
    path: /var/lib/AccountsService/users
    state: directory
    owner: root
    group: root
    mode: 'u=rw,go=r'

- name: Hide vagrant user
  ansible.builtin.template:
    src: hide-user.j2
    dest: /var/lib/AccountsService/users/vagrant
    owner: root
    group: root
    mode: 'u=rw,go=r'

- name: Migrate user files
  ansible.builtin.shell: |
    if [ -d /var/persistent/home/vagrant ]; then
      echo 'Migrating user files'
      mv /var/persistent/home/vagrant "/var/persistent/home/$MY_USER"
      chown -R "$MY_USER:$MY_USER" "/var/persistent/home/$MY_USER"
    fi
  environment:
    MY_USER: '{{ my_user }}'
  register: migrate_files_result
  changed_when: "'Migrating user files' in migrate_files_result.stdout"
  when: create_user_result.changed
