---
- hosts: all
  become: yes

  vars:
    x_ansible_download_dir: /usr/local/src/ansible/data
    intellij_edition: community

  pre_tasks:
    - name: update apt cache
      apt: update_cache=yes cache_valid_time=86400

    - name: update all packages to the latest version
      apt:
        upgrade: dist

    # zram shouldn't be used with Zswap
    - name: ensure zram-config absent
      apt:
        name: zram-config
        state: absent

  roles:
    # Preserve the apt cache
    - role: gantsign.apt
      apt_preserve_cache: yes

    # Set system timezone
    - role: gantsign.timezone
      timezone: Europe/London

    # Increase minimum password strength
    - role: gantsign.pwquality
      pwquality_minlen: 16
      pwquality_maxrepeat: 3
      # See https://github.com/gantsign/ansible_role_pwquality for more options

    # Increase the number of files that can be watched.
    # https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit
    - role: gantsign.inotify
      inotify_max_user_watches: 524288

    # Backup/restore files/directories in vagrant home directory
    - role: gantsign.backup
      tags:
        - backup
      backup_user: vagrant
      backup_src: /home/vagrant/
      backup_dest: /var/persistent/home/vagrant/
      backup_filter: |
        !
        + /.atom
        + /.atom
        + /.atom/config.cson
        - /.atom/*
        + /.bash_history
        + /.config
        + /.config/hub
        + /.config/Code
        + /.config/Code/User
        + /.config/Code/User/settings.json
        - /.config/Code/User/*
        - /.config/Code/*
        + /.config/Postman
        - /.config/*
        + /.gitconfig
        + /.gnupg
        + /.local
        + /.local/share
        + /.local/share/keyrings
        - /.local/share/*
        - /.local/*
        + /.m2
        - /.m2/repository
        - /.m2/wrapper
        + /.ssh
        - /.ssh/authorized_keys
        + /workspace
        + /workspace-go
        - /workspace-go/pkg
        + /.zsh_history
        - .bin
        - .molecule
        - .tmp
        - bin
        - build/*
        - Cache
        - GPUCache
        - node_modules
        - target/*
        - /*

    # Set keyboard layout
    - role: gantsign.keyboard
      keyboard_model: pc105
      keyboard_layout: gb

    # Configure locale
    - role: oefenweb.locales
      locales_present:
        - en_GB.UTF-8
        - en_US.UTF-8
      locales_default:
        lang: en_GB.UTF-8

    # Enable dynamic swap manager
    - role: gantsign.swapspace
      tags:
        - swapspace

    # Enable compressed swap with partial RAM storage
    - role: gantsign.zswap
      tags:
        # Needs swap to work
        - swapspace
        - zswap

    # Install common command line tools
    - gantsign.command-line-tools

    # Advanced alternative to cat
    - role: gantsign.bat

    # Intuative alternative to find
    - role: gantsign.fd

    # Install and configure Git version control
    - role: weareinteractive.git
      git_config:
        core:
          autocrlf: input
        alias:
          ls: 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate'
          ll: 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat'
          lds: 'log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short'
          lt: 'log --oneline --graph --decorate --all'
          co: 'checkout'
          cb: 'checkout -b'
          ca: 'commit --amend'
          cane: 'commit --amend --no-edit'
          rom: 'rebase origin/master'
          rod: 'rebase origin/develop'
          po: 'push origin HEAD'
          pof: 'push origin HEAD --force'
          cmp: '!git checkout master && git pull -p'
          cdp: '!git checkout develop && git pull -p'
          pop: 'stash pop'
          # git needs the following commands below to be quoted so we use > to preserve quotes
          lb: >
            "!git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'"
          release-notes: >
            "!git log --color --pretty=format:'%s%Cred%d%Creset' --decorate | sed -E 's/(.*) \\((\\#[0-9]+)\\)/* \\2: \\1/' | tac -"

    # Configure Git user name and email
    - role: gantsign.git_user
      users:
        - username: vagrant
          git_user_name: '{{ git_user_name | default(None) }}'
          git_user_email: '{{ git_user_email | default(None) }}'
          git_user_force: '{{ git_user_force | default(False) }}'

    # Install Hub (GitHub wrapper for Git)
    - role: gantsign.hub
      tags:
        - hub

    # Install Docker
    - role: geerlingguy.docker
      tags:
        - docker
      docker_users:
        - vagrant

    # Fix Docker for vagrant-proxyconf compatibility
    - role: docker-proxy-fix
      tags:
        - docker

    # Install ctop
    - role: gantsign.ctop
      tags:
        - docker

    # Install Kubernetes
    - role: gantsign.kubernetes
      tags:
        - kubernetes
        - docker
      kubernetes_node_type: admin

    # Install Minikube
    - role: gantsign.minikube
      tags:
        - kubernetes
        - docker

    # Install Helm
    - role: gantsign.helm
      tags:
        - kubernetes
        - docker

    # Install Kompose
    - role: gantsign.kompose
      tags:
        - kubernetes
        - docker

    # Install Pyenv
    - role: gantsign.pyenv
      tags:
        - python
      pyenv_users:
        - vagrant

    # Install Java JDK 8
    - role: gantsign.java
      tags:
        - java
      java_version: '8.0.322+6'
      java_vendor: adoptium
      java_is_default_installation: no
      java_fact_group_name: java_8

    # Install Java JDK 11
    - role: gantsign.java
      tags:
        - java
      java_version: '11.0.14.1+1'
      java_vendor: adoptium

    # Install Maven
    - role: gantsign.maven
      tags:
        - java
        - maven
      maven_version: '3.8.4'

    # Add Node.js
    - role: geerlingguy.nodejs
      tags:
        - nodejs
      nodejs_version: 16.x
      nodejs_install_npm_user: vagrant
      nodejs_npm_global_packages:
        - name: grunt-cli
        - name: grunt-init
        - name: gulp-cli
        - name: npm-check-updates
        - name: typescript
        - name: ts-node
        - name: typings

    # Install Go language SDK
    - role: gantsign.golang
      tags:
        - golang
      golang_gopath: '$HOME/workspace-go'

    # Enable audio support
    - role: gantsign.audio
      tags:
        - gui
      audio_users:
        - vagrant

    # Install GNOME desktop
    - role: gantsign.xdesktop
      tags:
        - gui

    # Disable guest login
    - role: gantsign.lightdm
      tags:
        - gui

    # Configure proxy settings for GNOME applications
    - role: gantsign.gnome-proxy
      tags:
        - proxy
        - gui

    # Install Credential Manager for Git
    - role: gantsign.git_credential_manager
      tags:
        - git-credential-manager
        - gui

    # Set the default web browser
    # This is only a partial solution as Google Chrome will still ask if you
    # want to make it the default browser when it first runs.
    - role: gantsign.default-web-browser
      tags:
        - gui
        - chrome
      default_web_browser: google-chrome

    # Install Visual Studio Code editor
    - role: gantsign.visual-studio-code
      tags:
        - gui
        - vscode
      users:
        - username: vagrant
          visual_studio_code_extensions:
            - EditorConfig.EditorConfig
            - streetsidesoftware.code-spell-checker
            - wholroyd.jinja
            - rebornix.Ruby
          visual_studio_code_settings: {
            "editor.rulers": [80, 100, 120],
            "editor.renderWhitespace": true,
            "files.associations": {
              "Vagrantfile": "ruby",
              ".vagrantuser": "yaml",
              ".vagrantuser.example": "yaml"
            }
          }

    # Install Go extension for Visual Studio Code editor
    - role: gantsign.visual-studio-code-extensions
      tags:
        - gui
        - vscode
        - golang
      users:
        - username: vagrant
          visual_studio_code_extensions:
            - golang.Go

    # Install Python extension for Visual Studio Code editor
    - role: gantsign.visual-studio-code-extensions
      tags:
        - gui
        - vscode
        - python
      users:
        - username: vagrant
          visual_studio_code_extensions:
            - ms-python.python

    # Install and configure IntelliJ IDEA IDE
    - role: gantsign.intellij
      tags:
        - gui
        - intellij
      users:
        - username: vagrant
          intellij_disabled_plugins:
            - CVS
            - com.intellij.uiDesigner
            - org.jetbrains.android
            - TestNG-J
            - hg4idea
            - Subversion
            - AntSupport
            - DevKit
            - CFML Support
            - ClearcasePlugin
            - CloudBees
            - CloudFoundry
            - Geronimo
            - GlassFish
            - Heroku
            - J2ME
            - JBoss
            - JSR45Plugin
            - OpenShift
            - Resin
            - StrutsAssistant
            - WebSphere
            - Weblogic
            - com.intellij.appengine
            - com.intellij.aspectj
            - com.intellij.dmserver
            - com.intellij.drools
            - com.intellij.flex
            - com.intellij.gwt
            - com.intellij.javaee.view
            - com.intellij.jbpm
            - com.intellij.play
            - com.intellij.seam
            - com.intellij.seam.pageflow
            - com.intellij.seam.pages
            - com.intellij.struts2
            - com.intellij.tapestry
            - com.intellij.vaadin
            - com.intellij.velocity
            - org.coffeescript
            - org.intellij.grails
            - org.jetbrains.plugins.haml
            - org.jetbrains.plugins.javaFX
            - org.jetbrains.plugins.stylus
            - TFS
            - PerforceDirectPlugin
          intellij_codestyles:
            - name: GantSign
              url: 'https://raw.githubusercontent.com/gantsign/code-style-intellij/2.0.0/GantSign.xml'
            - name: GantSign2
              url: 'https://raw.githubusercontent.com/gantsign/code-style-intellij/2.0.0/GantSign2.xml'
          intellij_active_codestyle: GantSign2
          intellij_inspection_profiles:
            - name: GantSign
              url: 'https://raw.githubusercontent.com/gantsign/inspection-profile-intellij/1.0.0/GantSign.xml'
          intellij_default_inspection_profile: GantSign
          intellij_plugins:
            # Save Actions plugin
            - com.dubreuia
            # Spelling and grammar checker
            - tanvd.grazi
            # For drawing diagrams
            - 'PlantUML integration'
          intellij_license_key_path: '{{ intellij_license_key_path }}'

    # Configure JDKs in IntelliJ IDEA IDE
    - role: gantsign.intellij_jdks
      tags:
        - java
        - gui
        - intellij
      users:
        - username: vagrant
          intellij_jdks:
            - name: '1.8'
              home: "{{ ansible_local.java_8.general.home }}"
            - name: '11'
              home: "{{ ansible_local.java.general.home }}"
          intellij_jdks_default: '11'

    # Install Java related plugins for IntelliJ IDEA IDE
    - role: gantsign.intellij-plugins
      tags:
        - java
        - gui
        - intellij
      users:
        - username: vagrant
          intellij_plugins:
            - CheckStyle-IDEA
            - MavenRunHelper
            - de.platon42.cajon

    # Install Python plugin for IntelliJ IDEA IDE
    - role: gantsign.intellij-plugins
      tags:
        - gui
        - intellij
        - python
      users:
        - username: vagrant
          intellij_plugins:
            - "{{ (intellij_edition == 'community') | ternary('PythonCore', 'Pythonid') }}"

    # Install Go plugin for IntelliJ IDEA IDE
    - role: gantsign.intellij-plugins
      tags:
        - gui
        - intellij
        - golang
      users:
        - username: vagrant
          intellij_plugins:
            - org.jetbrains.plugins.go
      when: "intellij_edition == 'ultimate'"

    # Add Maven extension to popup a GUI notification when builds finish
    - role: gantsign.maven-notifier
      tags:
        - java
        - maven
        - maven-notifier
        - gui

    # Add items to DockbarX launcher
    - role: gantsign.pin-to-launcher
      tags:
        - gui
      pin_to_launcher: gnome
      pin_to_launcher_favorites:
        - application: terminator.desktop
        - application: org.gnome.Nautilus.desktop
        - application: google-chrome.desktop
        - application: postman_postman.desktop
        - application: code.desktop
        - application: "{{ ansible_local.intellij.general.desktop_filename if (ansible_local is defined and ansible_local.intellij is defined) else omit }}"

    # Configure general environment variables
    - role: weareinteractive.environment
      environment_config:
        CDPATH: ".:/home/vagrant/workspace:/home/vagrant/workspace-go/src/github.com/gantsign"
        TREE_COLORS: ':no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.bat=01;32:*.BAT=01;32:*.btm=01;32:*.BTM=01;32:*.cmd=01;32:*.CMD=01;32:*.com=01;32:*.COM=01;32:*.dll=01;32:*.DLL=01;32:*.exe=01;32:*.EXE=01;32:*.arj=01;31:*.bz2=01;31:*.deb=01;31:*.gz=01;31:*.lzh=01;31:*.rpm=01;31:*.tar=01;31:*.taz=01;31:*.tb2=01;31:*.tbz2=01;31:*.tbz=01;31:*.tgz=01;31:*.tz2=01;31:*.z=01;31:*.Z=01;31:*.zip=01;31:*.ZIP=01;31:*.zoo=01;31:*.asf=01;35:*.ASF=01;35:*.avi=01;35:*.AVI=01;35:*.bmp=01;35:*.BMP=01;35:*.flac=01;35:*.FLAC=01;35:*.gif=01;35:*.GIF=01;35:*.jpg=01;35:*.JPG=01;35:*.jpeg=01;35:*.JPEG=01;35:*.m2a=01;35:*.M2a=01;35:*.m2v=01;35:*.M2V=01;35:*.mov=01;35:*.MOV=01;35:*.mp3=01;35:*.MP3=01;35:*.mpeg=01;35:*.MPEG=01;35:*.mpg=01;35:*.MPG=01;35:*.ogg=01;35:*.OGG=01;35:*.ppm=01;35:*.rm=01;35:*.RM=01;35:*.tga=01;35:*.TGA=01;35:*.tif=01;35:*.TIF=01;35:*.wav=01;35:*.WAV=01;35:*.wmv=01;35:*.WMV=01;35:*.xbm=01;35:*.xpm=01;35:'

    # Configure Java environment variables
    - role: weareinteractive.environment
      tags:
        - java
      environment_config:
        JAVA_HOME: "{{ ansible_local.java.general.home }}"

    # Configure Maven environment variable
    - role: weareinteractive.environment
      tags:
        - java
        - maven
      environment_config:
        M2_HOME: "{{ ansible_local.maven.general.home }}"
        # -XX:TieredStopAtLevel=1 disables hotspot profiling and higher tiers of
        # optimization, which Maven builds are too short lived to benefit from.
        # -Xverify:none disables class verification; not something you should
        # ever use in production (or on your CI) but ok for local development.
        MAVEN_OPTS: '-XX:TieredStopAtLevel=1 -Xverify:none'
        # Affects the Gradle client not the Gradle server
        GRADLE_OPTS: '-Xmx64m -XX:TieredStopAtLevel=1 -Xverify:none'

    # Install Antigen Zsh shell enhancements
    - role: gantsign.antigen
      tags:
        - oh-my-zsh
      users:
        - username: vagrant
          antigen_libraries:
            - name: oh-my-zsh
              env:
                DISABLE_AUTO_UPDATE: '"true"' # Should be rebuilding the VM
          antigen_theme:
            name: robbyrussell
          antigen_bundles:
            - name: command-not-found
            - name: common-aliases
            - name: colored-man-pages
            - name: git
            - name: httpie
            - name: sudo
            - name: bat
              url: gantsign/zsh-plugins
              location: bat
            - name: moleculew
              url: gantsign/molecule-wrapper
              location: zsh

    - role: gantsign.antigen
      tags:
        - oh-my-zsh
        - zsh-autosuggestions
      users:
        - username: vagrant
          antigen_bundles:
            - name: zsh-autosuggestions
              url: zsh-users/zsh-autosuggestions

    - role: gantsign.antigen
      tags:
        - oh-my-zsh
        - zsh-syntax-highlighting
      users:
        - username: vagrant
          antigen_bundles:
            # bundles are loaded by name alpabetically
            # and zsh-syntax-highlighting must be loaded last
            - name: zzz
              url: zsh-users/zsh-syntax-highlighting

    - role: gantsign.antigen_bundles
      tags:
        - oh-my-zsh
        - docker
      users:
        - username: vagrant
          antigen_bundles:
            - name: docker
            - name: ctop
              url: gantsign/zsh-plugins
              location: ctop
            - name: dive
              url: gantsign/zsh-plugins
              location: dive

    - role: gantsign.antigen_bundles
      tags:
        - oh-my-zsh
        - docker
        - kubernetes
      users:
        - username: vagrant
          antigen_bundles:
            - name: kubectl
            - name: kubeadm
              url: gantsign/zsh-plugins
              location: kubeadm
            - name: minikube-none
              url: gantsign/zsh-plugins
              location: minikube-none
            - name: helm
            - name: kompose
              url: gantsign/zsh-plugins
              location: kompose

    - role: gantsign.antigen_bundles
      tags:
        - oh-my-zsh
        - java
        - maven
      users:
        - username: vagrant
          antigen_bundles:
            - name: mvn

    - role: gantsign.antigen_bundles
      tags:
        - oh-my-zsh
        - java
        - gradle
      users:
        - username: vagrant
          antigen_bundles:
            - name: gradle

    - role: gantsign.antigen_bundles
      tags:
        - oh-my-zsh
        - nodejs
      users:
        - username: vagrant
          antigen_bundles:
            - name: npm
            - name: yarn

    - role: gantsign.antigen_bundles
      tags:
        - oh-my-zsh
        - python
      users:
        - username: vagrant
          antigen_bundles:
            - name: pip
            - name: pyenv
            - name: pipenv

    - role: gantsign.antigen_bundles
      tags:
        - oh-my-zsh
        - hub
      users:
        - username: vagrant
          antigen_bundles:
            - name: hub
              url: '/usr/local/share/hub/zsh'

    # Install SDKMAN software development kit manager
    - role: gantsign.sdkman
      tags:
        - sdkman
      sdkman_users:
        - vagrant

    # Add SDKs to SDKMAN
    - role: gantsign.sdkman_init
      tags:
        - sdkman
        - java
      users:
        - username: vagrant
          sdkman_install:
            - candidate: java
              version: '8'
              path: '{{ ansible_local.java_8.general.home }}'
            - candidate: java
              version: '11'
              path: '{{ ansible_local.java.general.home }}'
          sdkman_default:
            java: '11'

    - role: gantsign.sdkman_init
      tags:
        - sdkman
        - java
        - maven
      users:
        - username: vagrant
          sdkman_install:
            - candidate: maven
              version: '3.6'
              path: '{{ ansible_local.maven.general.home }}'
          sdkman_default:
            maven: '3.6'

  post_tasks:
    # Install Pipenv
    - name: install Pipenv
      package:
        name: pipenv
      tags:
        - python

    # Install Google Chrome web browser
    - name: install Google Chrome
      package:
        name: google-chrome-stable
      tags:
        - gui
        - chrome

    # Install Postman HTTP tool
    - name: install Postman
      snap:
        name:
          - postman
        state: present
      tags:
        - gui
        - postman

    # Cleanup
    - name: remove dependencies that are no longer required
      apt:
        autoremove: yes

    - name: remove obsolete packages from the cache
      apt:
        autoclean: yes
